Célok:
	- iptables szabályok, set mark
	- zonazas
	- grafikus GTK felulet
Később:
	- automatikus tűzfalazás (portscan detect, break-in-attempt detect).

	main 	-  processing
Gtimer		polling
	|						|
	V						V
Gui			<-	callback
	|						|
	V						V
Got			->	Accept or Drop:

packet handler callback spec:
 - kibányászni az infókat.
 - process/connection ellenőrzés: ha nincs olyan, akkor bye-bye.
 - zónázás: zónafeloldás
 - döntés:
 inbound, outbound:
   - ha van már rá rule, akkor verdict alapján dönteni.
   - ha nincs, létrehozni, ASK-ra tenni, csomagot markolni, lánc-ba visszadobni (nf_repeat).
 pending inb, outb:
   - ha van rule, akkor verdict alapján dönteni.
   - ha nincs rule, akkor visszadobni ugyanabba a queue-ba (nf_queue).

alias:
  - conf-ban külön rész
  - ghashtable a lookup-nak
  - GString*-ek a hashtable-ben
  - char* a kulcs.
  - sima lookup, és kész.

kliens fele communikáció:
 - kell:
  * IP: forrás, cél, (char[4])
  * Port: forrás, cél: guint32
  * Zóna: forrás, cél: névvel (string w/len)
  * Program név: string w/len
  * Irány: guint32
  * dummy verdict: guint32
 - daemon connection-t átküldi a gui-threadnek, ami összerakja a kliens fele menő adatokat(zónafeloldás, stb).
 - kliens megkapja, verdict-et mond, visszaküldi a servernek.
 - server beállítja a verdict-et a megfelelő rule-nál-> rule lookup-ot csinál a kliens által visszaküldött adatokból.

lookup rule:
 - lookup a program névre
 - ha az van, lookup a hash-re->
  - hash felépítése: total: 64-bit | 16 bit: reserved | 31 bit:pid | 8 bit: srczone: | 8 bit: destzone   | 1 bit: direction | 
  - lookup pid, srczone, destzone kitöltve.
  - lookup elvileg az összes lehetséges kombinációval (3 érték, 0 vagy nem, -> 8 kombináció)

végleges program feature-jei:
 - daemon, client, control
 - client saját window-val
 - remote control, central

TODO:
 - input connection handling (phx_data_extract IN-OUTBOUND-ra figyelni!) KÉSZ
  - hogyan: bejövő kapcsolatokat engedni programokra, bejövő lista  KÉSZ
 - /proc/net/tcp6 támogatás (elég csak az ipv4-es címeket nézni). KÉSZ
  - bejövő kapcsolatok tcp6-os problémáját megnézni! KÉSZ
 - Vuze tesztelés, tcp6 connection timeoutok megnézése jobban
 - dialógusablak kicsit erősebb jelenléte -> saját dialógusablak írása. KÉSZ
	- daemon-client modell után, client feladata FÉLIG KÉSZ
 - szabályok átgondolása: DROP,ACCEPT,REJECT, mikor, hogyan KÉSZ
  - ICMP reject mark alapján szétválogatni,. KÉSZ
 - eventlog - vagy vmilyen logging modell.
 - daemon-client modell KÉSZ
 - zónázás KÉSZ
 - zónákat rule-okbe beépíteni KÉSZ
 - performancia javítás részletesen KÉSZ
  - tesztelés: connection burst
 - inotify a processekre, amik meg vannak jegyezve pid alapján, ha a process bejegyzés megszünik
   a /proc-ban, akkor törölni. Túl nagy falat, legvégén, ha lesz idő
 - UDP kapcsolatok: szívás lesz, esetleg on-the-fly iptables szabály generálás? -> inkább conntrack
 - reverse dns lookup + dns caching -> lehet, hogy elég, ha csak a gui nézi?
 - rule hash átgondolás: pid, userid, zonák, direction -> GString legyen itt is a hash... FÉLIG KÉSZ, guint64 a hash
 - zóna többszörös lookup (*-os zónákra lookupolni). KÉSZ
 - beépített zónák: local, internet
 - comment lehessen sor végén is KÉSZ
 - zóna törlés control-on, zóna mentés control-on
 - input validáció control-on
 - rule editing -> add/delete átgondolás, merge
 - pid-et beletenni hash-be, userid nem lesz, gint64 hash. KÉSZ
 - config-ban lehessen zónát megadni a rule-nak (rule parseolás később, mint a zóna parseolás).
 - config-ban lehessen zóna és rule file-t megadni.
 - control.py-ban rule-ok mentésére lehetőség
 - lenyomozni a zónafeloldásos bugot (/32-es zónákra nem tud feloldani)
 - lenyomozni a pending_conn_count-nál lévő bugot

Koncepció:
 - zona - program - instance
   - zonat iptartomany,
   - programot programnév, 
   - instance-t programnév,pid páros
  - azonosíto
 - zona: az elején beállítani
 - rule: zonához instance vagy program és direction
 - applist:
  - struct apprule
     - char* appname
     - int pid
     - int direction
     - int verdict -> or verdict has direction?  
 - zona->zone_id
  - verdictek: ACCEPT,ACCEPT_INST,ACCEPT_CONN,DENIED,DENIED_INST,DENIED_CONN (ACCEPT/DENIED_CONN nem lesz...)
 - config szabályok:
	- [rule]
  -   program,sport,sip,sdomain,dport,dip,ddomain,verdict
